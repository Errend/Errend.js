{"version":3,"sources":["webpack:///errend.js","webpack:///webpack/bootstrap d188976ed0cf2d8c0273","webpack:///./src/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","Errend","window","self","console","log","this"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,IAGAV,EAAA,KDMM,SAAUI,EAAQD,IAEK,SAASQ,GAAS,YEpC/C,IAOMC,IAP4B,mBAAXC,QAAyBA,OAChB,mBAAXF,GAAyBA,EAChB,mBAATG,MAAuBA,WAO5CC,SAAQC,IAAI,kBAeZZ,EAAOD,QAAUS,IFqBaL,KAAKJ,EAAU,WAAa,MAAOc","file":"errend.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar _window = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\t\n\tvar Errend = {};\n\t\n\tconsole.log('i am index.js2');\n\t\n\tmodule.exports = Errend;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// errend.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d188976ed0cf2d8c0273","/**\n * Enforces a single instance of the Errend client, and the\n * main entry point for Errend. If you are a consumer of the\n * Errend library, you SHOULD load this file (vs raven.js).\n **/\n\n// 核心库\n// const ErrendConstructor = require('./error');\n\n// 兼容宿主环境\nconst _window = typeof window !== 'undefined' ? window\n            : typeof global !== 'undefined' ? global\n            : typeof self !== 'undefined' ? self\n            : {};\n\n// const _Errend = _window.Errend;\n\nconst Errend = {}\n\nconsole.log('i am index.js2');\n\n/*\n * Allow multiple versions of Errend to be installed.\n * Strip Errend from the global context and returns the instance.\n *\n * @return {Errend}\n */\n// Errend.noConflict = function () {\n// \t_window.Errend = _Errend;\n// \treturn Errend;\n// };\n\n// Errend.afterLoad();\n\nmodule.exports = Errend;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}